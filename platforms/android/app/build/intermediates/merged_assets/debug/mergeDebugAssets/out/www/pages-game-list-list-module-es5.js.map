{"version":3,"sources":["webpack:///src/app/pages/game/list/list.page.html","webpack:///src/app/pages/game/list/list-routing.module.ts","webpack:///src/app/pages/game/list/list.module.ts","webpack:///src/app/pages/game/list/list.page.scss","webpack:///src/app/pages/game/list/list.page.ts"],"names":["routes","path","component","ListPageRoutingModule","imports","forChild","exports","ListPageModule","declarations","ListPage","request","dialogService","modalController","dialog","util","games","tabs","gameService","init","event","api_function","subscribe","response","selectTab","console","log","target","complete","error","completed","create","componentProps","date","tabSelected","modal","onDidDismiss","then","data","game","listAddLast","present","id","listUpdate","presentAlertConfirm","e","api_delete","showToast","listDelete","item","index","parseInt","detail","value","tab","focusSegment","segmentId","document","getElementById","scrollIntoView","behavior","block","inline","ms","Promise","resolve","setTimeout","length","now","tabSelect","forEach","i","date_tab","isAfter","selectDate","delay","selector","template"],"mappings":"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","file":"pages-game-list-list-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"admin_home\\\"></ion-back-button>    \\n    </ion-buttons>\\n    <ion-title>Partidos</ion-title>\\n    <ion-buttons slot=\\\"secondary\\\">\\n      <ion-button (click)=\\\"openModal()\\\">\\n        <ion-icon name=\\\"add-outline\\\"></ion-icon>      \\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"init($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n\\n  <ion-list>\\n      \\n    \\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-segment scrollable [(ngModel)]=\\\"tabSelected\\\" (ionChange)=\\\"selectDate($event)\\\" >\\n              <ion-segment-button *ngFor=\\\"let tab of tabs;let i=index\\\" value=\\\"{{i}}\\\" id=\\\"sgm_{{i}}\\\" >\\n                {{tab.date}}\\n              </ion-segment-button>\\n            </ion-segment>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n      <ion-list-header *ngIf=\\\"games.length == 0\\\"  color=\\\"tertiary\\\">\\n        <ion-label>Sin registros</ion-label>\\n      </ion-list-header>\\n\\n   \\n      <ion-item *ngFor=\\\"let item of games\\\" >\\n\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size=\\\"10\\\">\\n              <ion-grid>\\n                <ion-row>\\n                  <ion-col size=\\\"11\\\">\\n                    {{item.team_l.name}}\\n                  </ion-col>\\n                  <ion-col size=\\\"1\\\">0</ion-col>\\n                </ion-row>\\n\\n                <ion-row>\\n                  <ion-col>\\n                    Vs\\n                  </ion-col>\\n                </ion-row>\\n\\n                <ion-row>\\n                  <ion-col size=\\\"11\\\">\\n                    {{item.team_v.name}}\\n                  </ion-col>\\n                  <ion-col size=\\\"1\\\">0</ion-col>\\n                </ion-row>\\n              </ion-grid>\\n            </ion-col>\\n\\n\\n            <ion-col size=\\\"2\\\">\\n              <ion-grid>\\n                <ion-row>\\n                  <ion-col size-sm=\\\"4\\\" size-xs=\\\"12\\\">\\n                    <a [routerLink]=\\\"['/admin/game/{item.id}']\\\">\\n                      <ion-icon name=\\\"enter -outline\\\"></ion-icon>\\n                    </a>\\n                  </ion-col>\\n                  <ion-col size-sm=\\\"4\\\" size-xs=\\\"12\\\">\\n                    <ion-button (click)=\\\"showEdit(item)\\\">\\n                      <ion-icon slot=\\\"icon-only\\\" name=\\\"create-outline\\\"></ion-icon>\\n                    </ion-button>\\n                  </ion-col>\\n                  <ion-col size-sm=\\\"4\\\" size-xs=\\\"12\\\">\\n                    <ion-button (click)=\\\"confirmDelete(item)\\\">\\n                      <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n                    </ion-button>\\n                  </ion-col>\\n                </ion-row>\\n              </ion-grid>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n\\n      </ion-item>\\n    </ion-list>\\n\\n\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListPage } from './list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListPageRoutingModule } from './list-routing.module';\n\nimport { ListPage } from './list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ListPageRoutingModule\n  ],\n  declarations: [ListPage]\n})\nexport class ListPageModule {}\n","export default \".status {\\n  width: 100%;\\n}\\n\\n.team {\\n  display: inline;\\n  width: 100%;\\n}\\n\\n.name-team {\\n  background-color: transparent;\\n}\\n\\n.goal-team {\\n  background-color: transparent;\\n}\\n\\n.names {\\n  width: 80%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZ2FtZS9saXN0L2xpc3QucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtBQUNKOztBQUVBO0VBQ0ksZUFBQTtFQUNBLFdBQUE7QUFDSjs7QUFFQTtFQUNJLDZCQUFBO0FBQ0o7O0FBRUE7RUFDSSw2QkFBQTtBQUNKOztBQUVBO0VBQ0ksVUFBQTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvZ2FtZS9saXN0L2xpc3QucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnN0YXR1c3tcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuLnRlYW17XG4gICAgZGlzcGxheTogaW5saW5lO1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4ubmFtZS10ZWFte1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4uZ29hbC10ZWFte1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4ubmFtZXN7XG4gICAgd2lkdGg6IDgwJTtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\n\nimport { RequestService } from '../../../api/request.service';\nimport { ModalController } from '@ionic/angular';\nimport { GameFormPage } from '../../../pages/game/game-form/game-form.page';\nimport { DialogService } from '../../../api/util/dialog.service';\nimport { Model } from 'src/app/api/models/model';\nimport { IfStmt } from '@angular/compiler';\nimport * as moment from 'moment';\n\nimport { from } from 'rxjs';\nimport { UtilService } from 'src/app/services/util.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.page.html',\n  styleUrls: ['./list.page.scss'],\n})\nexport class ListPage implements OnInit {\n\n  public games = [];\n  public gameService : Model;\n\n  public tabs = []\n  public tabSelected :any;\n\n\n\n  constructor(\n    public request : RequestService,\n    public dialogService : DialogService,\n    public modalController: ModalController,\n    public dialog : DialogService,\n    public util : UtilService\n  ) {\n    this.gameService = new Model('Game',request);\n  }\n  \n  ngOnInit(): void {\n//    this.gameService.setModel('Game');\n    //this.gameService.api_all();\n    this.init();\n  \n  }\n\n  init( event = null){\n    this.gameService.api_function('pageAdminAll').subscribe(\n      response => {\n        this.tabs = response['data']['dates'];\n        this.selectTab();\n        console.log(response)\n        if(event)\n          event.target.complete()\n        \n\n      },\n      error => {\n        if(event)\n          event.target.completed()\n      }\n    )\n  }\n\n  async openModal() {\n    const modal = await this.modalController.create({\n      component: GameFormPage ,\n      componentProps : {\n        date : this.tabs && this.tabs[this.tabSelected] ? this.tabs[this.tabSelected].date : ''\n      }\n    });\n\n    modal.onDidDismiss().then(data=>{\n      const game = data.data['game'];\n      this.gameService.listAddLast(game);\n    })\n\n    return await modal.present();\n   }\n\n   async showEdit(game){\n    const modal = await this.modalController.create({\n      component: GameFormPage ,\n      componentProps: { id: game.id }\n    });\n\n    modal.onDidDismiss().then(data=>{\n      const game = data.data['game'];\n      this.gameService.listUpdate(game.id,game);\n\n    })\n\n    return await modal.present();\n   }\n\n   confirmDelete(game){\n    this.dialog.presentAlertConfirm('Confirmar','Estas seguro de eliminar este game',e => {\n      this.delete(game)\n    });\n   }\n\n   delete(game){\n     this.gameService.api_delete(game.id).subscribe(data => {\n       console.log(data);\n       if(data['status'] == 'success'){\n         this.dialog.showToast('Game Eliminado',null,'success');\n         this.gameService.listDelete(game.id);\n       }\n     });\n   }\n\n   showItem(item){\n     console.log(item)\n   }\n\n   selectDate(event){\n    let index = parseInt( event.detail.value );\n\n    let tab = this.tabs[index];\n\n    if(tab['results']){\n      this.games = tab['results']\n      this.focusSegment()\n      return;\n    }\n    this.gameService.api_function('adminByDate',{'date' : tab['date']}).subscribe(\n      response => {\n        if(response['status'] == 'success'){\n          this.tabs[index]['results'] = response['data']\n          this.games = this.tabs[index]['results'];\n          this.focusSegment()\n        }\n        console.log(response);\n      },\n      error => {\n        console.error(error);\n      }\n    )\n\n  }\n\n  focusSegment() {\n    let segmentId = 'sgm_' + this.tabSelected;\n    console.log('select segment : ', segmentId)\n    document.getElementById(segmentId).scrollIntoView({ \n      behavior: 'smooth',\n      block: 'center',\n      inline: 'center'\n    });\n  }\n\n  \n  delay(ms: number) {\n    return new Promise( resolve => setTimeout(resolve, ms) );\n  }\n\n  async selectTab(){\n    if(this.tabs.length > 0 ){\n      let now = moment()\n      let tabSelect = 0;\n      this.tabs.forEach(( tab, i) => {\n        let date_tab = moment(tab.date)\n        if(date_tab.isAfter( now ) && tabSelect == 0 ){\n          tabSelect = i\n        }\n      });\n\n      this.selectDate({detail:{value:tabSelect}})\n\n      this.tabSelected = tabSelect;\n\n      await this.util.delay(1500)\n\n      this.focusSegment();\n    }\n  }\n\n\n\n}\n"]}